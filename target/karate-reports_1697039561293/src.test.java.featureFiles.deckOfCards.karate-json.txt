{"failedCount":2,"prefixedPath":"src\/test\/java\/featureFiles\/deckOfCards.feature","packageQualifiedName":"src.test.java.featureFiles.deckOfCards","loopIndex":-1,"relativePath":"src\/test\/java\/featureFiles\/deckOfCards.feature","scenarioResults":[{"sectionIndex":0,"stepResults":[{"result":{"nanos":184217101,"millis":184.217101,"status":"passed"},"step":{"line":4,"prefix":"Given","index":0,"text":"url 'https:\/\/deckofcardsapi.com\/api\/deck\/new\/'"}},{"result":{"nanos":1678200,"millis":1.6782,"status":"passed"},"step":{"line":5,"prefix":"And","index":1,"text":"param jokers_enabled = true"}},{"result":{"nanos":1736991099,"millis":1736.991099,"status":"passed"},"step":{"line":6,"prefix":"When","index":2,"text":"method GET"},"stepLog":"10:52:11.793 request:\n1 > GET https:\/\/deckofcardsapi.com\/api\/deck\/new\/?jokers_enabled=true\n1 > Host: deckofcardsapi.com\n1 > Connection: Keep-Alive\n1 > User-Agent: Apache-HttpClient\/4.5.13 (Java\/11.0.19)\n1 > Accept-Encoding: gzip,deflate\n\n\n10:52:12.593 response time in milliseconds: 795\n1 < 200\n1 < Date: Wed, 11 Oct 2023 15:52:15 GMT\n1 < Content-Type: application\/json\n1 < Transfer-Encoding: chunked\n1 < Connection: keep-alive\n1 < Access-Control-Allow-Origin: *\n1 < X-Content-Type-Options: nosniff\n1 < Referrer-Policy: same-origin\n1 < X-Frame-Options: DENY\n1 < Vary: Origin\n1 < CF-Cache-Status: DYNAMIC\n1 < Report-To: {\"endpoints\":[{\"url\":\"https:\\\/\\\/a.nel.cloudflare.com\\\/report\\\/v3?s=BVbHJRROQs7DZcAbZ%2FhSxBtA2BlkiFko912xkWLz3Erx37LWYt6R%2BlyFkv5Z%2BrJa0H9O%2BFonF1gRENNyo7XDjtjJiCMBxoTqnWB%2Fxi2OZNdO6Gyfbs0jqMCXqefOut7gdv5o6Wg%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}\n1 < NEL: {\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}\n1 < Server: cloudflare\n1 < CF-RAY: 814844e58a19486e-DFW\n1 < alt-svc: h3=\":443\"; ma=86400\n{\"success\": true, \"deck_id\": \"b7nhs1eo6mx4\", \"remaining\": 54, \"shuffled\": false}\n\n"},{"result":{"nanos":34300,"millis":0.0343,"status":"passed"},"step":{"line":7,"prefix":"Then","index":3,"text":"status 200"}},{"result":{"nanos":180952901,"millis":180.952901,"status":"passed"},"step":{"line":8,"prefix":"And","index":4,"text":"print response"},"stepLog":"10:52:12.846 [print] {\n  \"success\": true,\n  \"deck_id\": \"b7nhs1eo6mx4\",\n  \"remaining\": 54,\n  \"shuffled\": false\n}\n \n"},{"result":{"nanos":4424100,"millis":4.4241,"status":"passed"},"step":{"line":9,"prefix":"*","index":5,"text":"print responseHeaders"},"stepLog":"10:52:12.853 [print] {\n  \"Date\": [\n    \"Wed, 11 Oct 2023 15:52:15 GMT\"\n  ],\n  \"Content-Type\": [\n    \"application\/json\"\n  ],\n  \"Transfer-Encoding\": [\n    \"chunked\"\n  ],\n  \"Connection\": [\n    \"keep-alive\"\n  ],\n  \"Access-Control-Allow-Origin\": [\n    \"*\"\n  ],\n  \"X-Content-Type-Options\": [\n    \"nosniff\"\n  ],\n  \"Referrer-Policy\": [\n    \"same-origin\"\n  ],\n  \"X-Frame-Options\": [\n    \"DENY\"\n  ],\n  \"Vary\": [\n    \"Origin\"\n  ],\n  \"CF-Cache-Status\": [\n    \"DYNAMIC\"\n  ],\n  \"Report-To\": [\n    \"{\\\"endpoints\\\":[{\\\"url\\\":\\\"https:\\\\\/\\\\\/a.nel.cloudflare.com\\\\\/report\\\\\/v3?s=BVbHJRROQs7DZcAbZ%2FhSxBtA2BlkiFko912xkWLz3Erx37LWYt6R%2BlyFkv5Z%2BrJa0H9O%2BFonF1gRENNyo7XDjtjJiCMBxoTqnWB%2Fxi2OZNdO6Gyfbs0jqMCXqefOut7gdv5o6Wg%3D\\\"}],\\\"group\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\"\n  ],\n  \"NEL\": [\n    \"{\\\"success_fraction\\\":0,\\\"report_to\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\"\n  ],\n  \"Server\": [\n    \"cloudflare\"\n  ],\n  \"CF-RAY\": [\n    \"814844e58a19486e-DFW\"\n  ],\n  \"alt-svc\": [\n    \"h3=\\\":443\\\"; ma=86400\"\n  ],\n  \"Set-Cookie\": [\n  ]\n}\n \n"},{"result":{"nanos":4103000,"millis":4.103,"status":"passed"},"step":{"line":10,"prefix":"*","index":6,"text":"def deckID = response.deck_id"}},{"result":{"nanos":1835399,"millis":1.835399,"status":"passed"},"step":{"line":11,"prefix":"*","index":7,"text":"print deckID"},"stepLog":"10:52:12.860 [print] b7nhs1eo6mx4 \n"}],"executorName":"main","line":3,"name":"Get a list of resources or  deck from server","description":"","durationMillis":2114.2361,"startTime":1697039530716,"failed":false,"refId":"[1:3]","endTime":1697039532860,"exampleIndex":-1},{"sectionIndex":1,"stepResults":[{"result":{"nanos":1180400,"millis":1.1804,"status":"passed"},"step":{"line":15,"prefix":"Given","index":0,"text":"url 'https:\/\/deckofcardsapi.com\/api\/deck\/new\/shuffle\/'"}},{"result":{"nanos":24419800,"errorMessage":"js failed:\n>>>>\n01: deckID\n<<<<\norg.graalvm.polyglot.PolyglotException: ReferenceError: \"deckID\" is not defined\n- <js>.:program(Unnamed:1)\n\nsrc\/test\/java\/featureFiles\/deckOfCards.feature:17","millis":24.4198,"status":"failed"},"step":{"comments":["#    * def value1 =  karate.quote(deckID)"],"line":17,"prefix":"*","index":1,"text":"def value2 = deckID"},"stepLog":"10:52:12.899 src\/test\/java\/featureFiles\/deckOfCards.feature:17\n* def value2 = deckID\njs failed:\n>>>>\n01: deckID\n<<<<\norg.graalvm.polyglot.PolyglotException: ReferenceError: \"deckID\" is not defined\n- <js>.:program(Unnamed:1)\n\nsrc\/test\/java\/featureFiles\/deckOfCards.feature:17\n"},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"line":18,"prefix":"*","index":2,"text":"print 'Deck ID is : ', value2"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"endLine":31,"comments":["#    * header deck_id=value2","#    And request {\"deck_count\": 6, \"deck_id\": \"\",value1}"],"line":22,"prefix":"And","docString":"{\n    \"deck_count\":6,\n\/*  \"deck_id\": \"value2\"*\/\n}","index":3,"text":"request"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"line":32,"prefix":"When","index":4,"text":"method POST"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"line":33,"prefix":"Then","index":5,"text":"status 200"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"line":34,"prefix":"And","index":6,"text":"print response"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"line":35,"prefix":"*","index":7,"text":"print responseHeaders"}}],"line":14,"description":"","durationMillis":25.6002,"failed":true,"error":"js failed:\n>>>>\n01: deckID\n<<<<\norg.graalvm.polyglot.PolyglotException: ReferenceError: \"deckID\" is not defined\n- <js>.:program(Unnamed:1)\n\nsrc\/test\/java\/featureFiles\/deckOfCards.feature:17","executorName":"main","name":"Shuffle cards using POST method","startTime":1697039532871,"refId":"[2:14]","endTime":1697039532899,"exampleIndex":-1},{"sectionIndex":2,"stepResults":[{"result":{"nanos":1432201,"errorMessage":"js failed:\n>>>>\n01: deckID\n<<<<\norg.graalvm.polyglot.PolyglotException: ReferenceError: \"deckID\" is not defined\n- <js>.:program(Unnamed:1)\n\nsrc\/test\/java\/featureFiles\/deckOfCards.feature:38","millis":1.432201,"status":"failed"},"step":{"line":38,"prefix":"*","index":0,"text":"def value2 = deckID"},"stepLog":"10:52:12.912 src\/test\/java\/featureFiles\/deckOfCards.feature:38\n* def value2 = deckID\njs failed:\n>>>>\n01: deckID\n<<<<\norg.graalvm.polyglot.PolyglotException: ReferenceError: \"deckID\" is not defined\n- <js>.:program(Unnamed:1)\n\nsrc\/test\/java\/featureFiles\/deckOfCards.feature:38\n"},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"line":39,"prefix":"*","index":1,"text":"print 'Deck ID is : ', value2"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"line":40,"prefix":"Given","index":2,"text":"url 'https:\/\/deckofcardsapi.com\/api\/deck\/' + value2 + '\/return'"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"comments":["#   And path value2","#    And path '\/return'","#    And * print url"],"line":44,"prefix":"When","index":3,"text":"method GET"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"line":45,"prefix":"Then","index":4,"text":"response"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"line":46,"prefix":"And","index":5,"text":"* print response"}}],"line":37,"description":"","durationMillis":1.432201,"failed":true,"error":"js failed:\n>>>>\n01: deckID\n<<<<\norg.graalvm.polyglot.PolyglotException: ReferenceError: \"deckID\" is not defined\n- <js>.:program(Unnamed:1)\n\nsrc\/test\/java\/featureFiles\/deckOfCards.feature:38","executorName":"main","name":"Returning cards to the  deck","startTime":1697039532909,"refId":"[3:37]","endTime":1697039532912,"exampleIndex":-1}],"callDepth":0,"name":"Test Deck of cards API's","description":"","resultDate":"2023-10-11 10:52:12 AM","durationMillis":2141.268501,"passedCount":1}